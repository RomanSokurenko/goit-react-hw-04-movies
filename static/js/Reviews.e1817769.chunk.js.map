{"version":3,"sources":["views/Reviews.js"],"names":["MovieDetailsPage","id","useParams","useState","reviews","setReviews","useEffect","Api","then","results","length","className","styles","list","map","author","content","item","notice"],"mappings":"kPAKe,SAASA,IACtB,IAAQC,EAAOC,cAAPD,GACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAHAC,qBAAU,WACRC,IAAiBN,GAAIO,KAAKH,KACzB,CAACJ,IAEF,mCACGG,IACEA,EAAQK,QAAQC,OAAS,EACxB,oBAAIC,UAAWC,IAAOC,KAAtB,SACGT,EAAQK,QAAQK,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACnB,qBAAaL,UAAWC,IAAOK,KAA/B,UACE,8CAAeF,KACf,4BAAIC,MAFGf,QAOb,mBAAGU,UAAWC,IAAOM,OAArB","file":"static/js/Reviews.e1817769.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport * as Api from '../Services/Api';\nimport styles from './Pages.module.css';\n\nexport default function MovieDetailsPage() {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    Api.fetchReviews(id).then(setReviews);\n  }, [id]);\n  return (\n    <>\n      {reviews &&\n        (reviews.results.length > 0 ? (\n          <ul className={styles.list}>\n            {reviews.results.map(({ id, author, content }) => (\n              <li key={id} className={styles.item}>\n                <b>{`Author: ${author}`}</b>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className={styles.notice}>\n            We don't have any reviews for this movie.\n          </p>\n        ))}\n    </>\n  );\n}\n"],"sourceRoot":""}