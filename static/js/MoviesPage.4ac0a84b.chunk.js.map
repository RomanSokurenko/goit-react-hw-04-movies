{"version":3,"sources":["Services/Api.js","views/Pages.module.css","views/MoviesPage.js"],"names":["BASE_URL","API_KEY","fetchMovies","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMoviesTrending","fetchMovieById","id","fetchCredits","fetchReviews","fetchQuery","value","module","exports","MoviesPage","useRouteMatch","location","useLocation","history","useHistory","qs","parse","search","query","useState","list","setList","useEffect","Api","then","results","catch","error","console","log","onSubmit","e","preventDefault","target","elements","searching","trim","alert","push","type","placeholder","name","className","styles","moviesList","map","title","poster_path","to","pathname","state","backUrl","poster","src","alt","width","height"],"mappings":"gVAAMA,EAAW,+BACXC,EAAU,mC,SAEDC,I,2EAAf,4CAAAC,EAAA,6DAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,GAA9C,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,oF,sBAOO,SAASC,IACd,OAAOX,EAAY,GAAD,OAAIF,EAAJ,qCAAyCC,IAGtD,SAASa,EAAeC,GAC7B,OAAOb,EAAY,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,oBAAoCd,IAGjD,SAASe,EAAaD,GAC3B,OAAOb,EAAY,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,4BAA4Cd,IAGzD,SAASgB,EAAaF,GAC3B,OAAOb,EAAY,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,4BAA4Cd,IAGzD,SAASiB,EAAWC,GACzB,OAAOjB,EAAY,GAAD,OACbF,EADa,iCACoBC,EADpB,kBACqCkB,M,mBC3BzDC,EAAOC,QAAU,CAAC,SAAW,wBAAwB,SAAW,wBAAwB,WAAa,0BAA0B,MAAQ,qBAAqB,cAAgB,+B,iICyE7JC,UApEI,WAAO,IAAD,EACflB,EAAQmB,cAARnB,IACFoB,EAAWC,cACXC,EAAUC,cACVR,GAAQ,UAAAS,IAAGC,MAAML,EAASM,eAAlB,eAA2BC,QAAS,GAClD,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAwBA,OAXAC,qBAAU,WACM,KAAVhB,GAGJiB,IAAejB,GACZkB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPJ,EAAQI,MAETC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACrB,IAGF,gCACE,uBAAMwB,SAxBgB,SAAAC,GAExB,GADAA,EAAEC,iBAC+C,KAA7CD,EAAEE,OAAOC,SAASC,UAAU7B,MAAM8B,OACpC,OAAOC,MAAM,4BAEfxB,EAAQyB,KAAR,2BACK3B,GADL,IAEEM,OAAO,SAAD,OAAWc,EAAEE,OAAOC,SAASC,UAAU7B,WAiB7C,UACE,uBAAOiC,KAAK,OAAOC,YAAY,gBAAgBC,KAAK,cACpD,wBAAQF,KAAK,SAAb,uBAEDnB,GACC,oBAAIsB,UAAWC,IAAOC,WAAtB,SACGxB,EAAKyB,KAAI,gBAAG3C,EAAH,EAAGA,GAAI4C,EAAP,EAAOA,MAAOL,EAAd,EAAcA,KAAMM,EAApB,EAAoBA,YAApB,OACR,6BACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAK1D,EAAL,YAAYW,GACpBgD,MAAO,CACLC,QAASxC,IAJf,UAQE,qBACE+B,UAAWC,IAAOS,OAClBC,IACkB,OAAhBN,EAAA,yCACsCA,GAClC,qIAENO,IAAG,OAAER,QAAF,IAAEA,IAASL,EACdc,MAAM,QACNC,OAAO,UAET,4BAAIV,QApBC5C","file":"static/js/MoviesPage.4ac0a84b.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6b42b69b9f4552f6c0055bb1ba7f76b5';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchMoviesTrending() {\n  return fetchMovies(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieById(id) {\n  return fetchMovies(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n}\n\nexport function fetchCredits(id) {\n  return fetchMovies(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n}\n\nexport function fetchReviews(id) {\n  return fetchMovies(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n}\n\nexport function fetchQuery(value) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}`,\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeList\":\"Pages_homeList__1insW\",\"castList\":\"Pages_castList__1F1_6\",\"moviesList\":\"Pages_moviesList__11TWk\",\"movie\":\"Pages_movie__139TD\",\"posterDetails\":\"Pages_posterDetails__3WR2w\"};","import { useEffect, useState } from 'react';\nimport { useLocation, useHistory, Link, useRouteMatch } from 'react-router-dom';\nimport qs from 'query-string';\nimport * as Api from '../Services/Api';\nimport styles from './Pages.module.css';\n\nconst MoviesPage = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n  const value = qs.parse(location.search)?.query || '';\n  const [list, setList] = useState([]);\n\n  const handleChangeInput = e => {\n    e.preventDefault();\n    if (e.target.elements.searching.value.trim() === '') {\n      return alert('Enter a value to search.');\n    }\n    history.push({\n      ...location,\n      search: `query=${e.target.elements.searching.value}`,\n    });\n  };\n\n  useEffect(() => {\n    if (value === '') {\n      return;\n    }\n    Api.fetchQuery(value)\n      .then(({ results }) => {\n        setList(results);\n      })\n      .catch(error => console.log(error));\n  }, [value]);\n\n  return (\n    <div>\n      <form onSubmit={handleChangeInput}>\n        <input type=\"text\" placeholder=\"Search movies\" name=\"searching\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {list && (\n        <ul className={styles.moviesList}>\n          {list.map(({ id, title, name, poster_path }) => (\n            <li key={id}>\n              <Link\n                to={{\n                  pathname: `${url}/${id}`,\n                  state: {\n                    backUrl: location,\n                  },\n                }}\n              >\n                <img\n                  className={styles.poster}\n                  src={\n                    poster_path !== null\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : 'https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg'\n                  }\n                  alt={title ?? name}\n                  width=\"280px\"\n                  height=\"450px\"\n                />\n                <p>{title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"sourceRoot":""}